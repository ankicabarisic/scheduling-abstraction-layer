<?xml version="1.0" encoding="UTF-8"?>
<job
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="urn:proactive:jobdescriptor:3.12" xsi:schemaLocation="urn:proactive:jobdescriptor:3.12 http://www.activeeon.com/public_content/schemas/proactive/jobdescriptor/3.12/schedulerjob.xsd"  name="Define_NS_EDGE"  priority="normal" onTaskError="continueJobExecution"  maxNumberOfExecution="2"  >
  <variables>
    <variable name="pa_port" value="8443" model="PA:Integer"    />
    <variable name="NS_name" value="EDGE_NS_ff808181802c945501802c945af00001" model="PA:NOT_EMPTY_STRING"    />
    <variable name="pa_protocol" value="http" model="PA:NOT_EMPTY_STRING"    />
    <variable name="rm_host_name" value="trydev.activeeon.com" model="PA:NOT_EMPTY_STRING"    />
    <variable name="ssh_username" value="client" model="PA:NOT_EMPTY_STRING"    />
    <variable name="ssh_password" value="ENC(/VbH1c65fkjx4pkVCVtTXvJgG5zDXX7O)" model="PA:HIDDEN"    />
    <variable name="ssh_key" value="" model="PA:HIDDEN"    />
    <variable name="ssh_port" value="22" model="PA:Integer"    />
    <variable name="list_of_ips" value="20.86.161.160," model="PA:NOT_EMPTY_STRING"    />
    <variable name="tokens" value="EDGE_App_"     />
    <variable name="deployment_mode" value="" model="PA:NOT_EMPTY_STRING"/>
    <variable name="script_url" value="https://link.com" model="PA:URL"/>
    <variable name="script_path" value="/tmp/proactive-agent.sh" model="PA:NOT_EMPTY_STRING"/>
    <variable name="jar_url" value="https://link.com" model="PA:URL"/>
    <variable name="jre_url" value="https://link.com" model="PA:URL"/>
  </variables>
  <description>
    <![CDATA[ A workflow that executes Groovy in JVM. ]]>
  </description>
  <taskFlow>
    <task name="Create_NodeSource"




          fork="true">
      <description>
        <![CDATA[ The simplest task, ran by a Groovy engine. ]]>
      </description>
      <scriptExecutable>
        <script>
          <code language="groovy">
            <![CDATA[
// Connecting to the Scheduler
import java.io.File

def retCode = 0;
def tokens= variables.get("tokens")
def nodeSourceName = variables.get("NS_name")
def protocol = variables.get("pa_protocol")
def host = variables.get("rm_host_name")
def port = variables.get("pa_port")
def sshUsername = variables.get("ssh_username")
def sshPassword = variables.get("ssh_password")
def sshKey = variables.get("ssh_key")
def sshPort = variables.get("ssh_port")
def ips= variables.get("list_of_ips")
def deploymentMode=variables.get("deployment_mode")
def scriptURL=variables.get("script_url")
def scriptPath=variables.get("script_path")
def nodeJarUrl=variables.get("jar_url")
def jreURL=variables.get("jre_url")
def javaOptions = "-Dproactive.net.nolocal=true -Dproactive.communication.protocol=pamr -Dproactive.useIPaddress=true -Dproactive.pamr.router.address=" + host

ips = ips.split(",")
def hosts = ""
for (ip in ips) {
    hosts = hosts + ip + " 1\n"
}

if (tokens=="") {
    tokens="ALL"
}
else {
    tokens="tokens="+tokens
}

def defaultStartupScript="%detachedModePrefix% %javaPath% %javaOptions% -Dfile.encoding=%fileEncoding% -cp .:%schedulingPath%/addons:%schedulingPath%/addons/*:%schedulingPath%/dist/lib/* org.ow2.proactive.resourcemanager.utils.RMNodeStarter -n %nodeName% -s %nodeSourceName% -r %rmUrl% -w %numberOfNodesPerInstance% -v %credentials% &"
def startupScriptWithNodeJarDownload= "if [ -d /tmp/node ]; then rm -rf /tmp/node; fi;\r\nmkdir -p /tmp/node && cd /tmp/node;\r\nwget -nv -O jre.tar.gz -N "+jreURL+"; mkdir jre;tar -xf jre.tar.gz --strip-components=1 -C jre;\r\nwget -nv --no-check-certificate -O node.jar %nodeJarUrl%\r\n%detachedModePrefix% jre/bin/java -jar node.jar %javaOptions% -Dpython.path=%jythonPath% -r %rmUrl% -n %nodeName% -s %nodeSourceName% -w %numberOfNodesPerInstance% -v %credentials% &"
def startupScriptStandard = "wget -nv -O "+scriptPath+" "+scriptURL+";\r\nchmod +x "+scriptPath+";\r\n"+scriptPath+";\r\n"+defaultStartupScript

println "[+] Preparation of NodeSoure " + nodeSourceName
print "(1/4) Connecting to the RM at "+protocol+"://"+host+":"+port+"/ ..."
rmapi.connect()
println  " OK!"

//Getting NS configuration settings
def infrastructureType = "org.ow2.proactive.resourcemanager.nodesource.infrastructure.SSHInfrastructureV2"
def infrastructureParameters = ["300000", //Node Time out
    							"5", //Max deployment failure
    							"5000", //wait between Deployment
    							sshPort,//port, //SSH port
    							sshUsername, //SSH Username
    							sshPassword, //SSH Password
   								"/opt/ProActive_node_agent/jre/bin/java",  //JavaPath on the remote host
    							"/opt/ProActive_node_agent", //ScheduligPath on the remote hosts
    							"Linux", //targetOs
								javaOptions, //Java options
								deploymentMode, //deploymentMode
								nodeJarUrl, //nodeJarUrl
								startupScriptStandard, //startupScriptStandard
								startupScriptWithNodeJarDownload] //startupScriptWithNodeJarDownload

def infrastructureFileParameters = [hosts, //hostsList file content
    								"", //SSH Private Key
                                    "" //SSH Options
                                	]
def policyType = "org.ow2.proactive.resourcemanager.nodesource.policy.StaticPolicy"
def poliyParameters = [tokens,"ALL"]
def policyFileParameters = [""]
def nodesRecoverable = "true"

print "(2/4) Creating NodeSource ..."
rmapi.defineNodeSource(nodeSourceName,infrastructureType,(String[]) infrastructureParameters.toArray(),(String[]) infrastructureFileParameters.toArray(), policyType, (String[]) poliyParameters.toArray(), (String[]) policyFileParameters.toArray(),nodesRecoverable)
println " ... OK !"
print "(3/4) Deploying the NodeSource ..."
rmapi.deployNodeSource(nodeSourceName)
println " ... OK !"
print "(4/4) Done"

return retCode;
]]>
          </code>
        </script>
      </scriptExecutable>
      <metadata>
        <positionTop>
          508.96875
        </positionTop>
        <positionLeft>
          515.5
        </positionLeft>
      </metadata>
    </task>
  </taskFlow>
  <metadata>
    <visualization>
      <![CDATA[ <html>
    <head>
    <link rel="stylesheet" href="/studio/styles/studio-standalone.css">
        <style>
        #workflow-designer {
            left:0 !important;
            top:0 !important;
            width:2836px;
            height:3472px;
            }
        </style>
    </head>
    <body>
    <div id="workflow-visualization-view"><div id="workflow-visualization" style="position:relative;top:-503.96875px;left:-510.5px"><div class="task _jsPlumb_endpoint_anchor_ ui-draggable active-task" id="jsPlumb_1_7" style="top: 508.969px; left: 515.5px; z-index: 24;"><a class="task-name" data-toggle="tooltip" data-placement="right" title="The simplest task, ran by a Groovy engine."><img src="/studio/images/Groovy.png" width="20px">&nbsp;<span class="name">Create_NodeSource</span></a></div><div class="_jsPlumb_endpoint source-endpoint dependency-source-endpoint connected _jsPlumb_endpoint_anchor_ ui-draggable ui-droppable" style="position: absolute; height: 20px; width: 20px; left: 568px; top: 538.969px;"><svg style="position:absolute;left:0px;top:0px" width="20" height="20" pointer-events="all" position="absolute" version="1.1" xmlns="http://www.w3.org/1999/xhtml"><circle cx="10" cy="10" r="10" version="1.1" xmlns="http://www.w3.org/1999/xhtml" fill="#666" stroke="none" style=""></circle></svg></div></div></div>
    </body>
</html>
 ]]>
    </visualization>
  </metadata>
</job>